# Copyright (c) 2024 Intel Corporation.
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: {{ .Values.namespace }}
data:
  nginx.conf: |-
{{ (.Files.Get (printf "apps/%s/configs/nginx/nginx.conf" .Values.env.SAMPLE_APP)) | indent 4 }}
---
apiVersion: v1
kind: Secret
metadata:
  name: nginx-ssl-certs
  namespace: {{ .Values.namespace }}
type: Opaque
data:
{{- $sslPath := printf "apps/%s/configs/nginx/ssl/*" .Values.env.SAMPLE_APP }}
{{- range $path, $file := .Files.Glob $sslPath }}
  {{ base $path }}: {{ $file | toString | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Values.config.nginx.name }}
  namespace: {{ $.Values.namespace }}
spec:
  type: NodePort
  selector:
    app: nginx-reverse-proxy
  ports:
  - name: http
    port: {{ $.Values.config.nginx.int.http_port }}
    targetPort: {{ $.Values.config.nginx.int.http_port }}
    nodePort: {{ $.Values.config.nginx.ext.http_port }}
  - name: https
    port: {{ $.Values.config.nginx.int.https_port }}
    targetPort: {{ $.Values.config.nginx.int.https_port }}
    nodePort: {{ $.Values.config.nginx.ext.https_port }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-reverse-proxy
  name: deployment-{{ $.Values.config.nginx.name }}
  namespace: {{ $.Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-reverse-proxy
  template:
    metadata:
      labels:
        app: nginx-reverse-proxy
    spec:
      containers:
      - name: nginx-reverse-proxy
        image: {{ $.Values.images.nginx }}
        imagePullPolicy: {{ $.Values.imagePullPolicy }}
        ports:
        - containerPort: {{ $.Values.config.nginx.int.http_port }}
        - containerPort: {{ $.Values.config.nginx.int.https_port }}
        env:
        - name: http_proxy
          value: {{ $.Values.env.http_proxy }}
        - name: https_proxy
          value: {{ $.Values.env.https_proxy }}
        - name: no_proxy
          value: {{ $.Values.env.no_proxy }},{{ $.Values.env.HOST_IP }}
        - name: NO_PROXY
          value: {{ $.Values.env.NO_PROXY }},{{ $.Values.env.HOST_IP }}
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: nginx-ssl
          mountPath: /etc/nginx/ssl
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
      - name: nginx-ssl
        secret:
          secretName: nginx-ssl-certs