worker_processes auto;

events {}

# MQTT proxy via TCP (uncomment if needed)
stream {
    upstream ia-mqtt-broker {
        server ia-mqtt-broker:1883;
    }

    server {
        listen 1883 ssl;
        ssl_certificate /opt/nginx/certs/cert.pem;
        ssl_certificate_key /opt/nginx/certs/key.pem;

        proxy_pass ia-mqtt-broker;
    }
}

http {
    # Grafana accessible at root path via HTTPS 443 mapped to the local container port
    # TimeSeries Microservice REST API available at /ts-api/
    # Host mapping is defined in the Docker Compose file
    server {
        listen 15443 ssl;

        server_name localhost;

        client_max_body_size 500M;

        # Nginx SSL cert paths
        ssl_certificate /opt/nginx/certs/cert.pem;
        ssl_certificate_key /opt/nginx/certs/key.pem;

        # SSL security settings
        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;

        location /ts-api {
            proxy_pass http://ia-time-series-analytics-microservice:5000/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            rewrite ^/ts-api/(.*)$ /$1 break;
        }

        # DL Streamer Pipeline Server
        location /dsps-api/ {
            proxy_pass http://dlstreamer-pipeline-server:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
        }

        location / {
            proxy_pass http://ia-grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            rewrite ^/grafana/(.*)$ /$1 break;
        }

         # Proxy WebRTC stream with CORS headers
        location /samplestream/ {
            proxy_pass http://${HOST_IP}:${WHIP_SERVER_PORT}/samplestream/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;

            # WebSocket support for WebRTC
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}